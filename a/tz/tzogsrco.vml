/*
CHANGE LOG
2000.10.20    SR  Z2000  Size of path variables
   Modified size of SourceFileName and SourceFileName2 in function GlobalOperGrpMigrate
   because size of attributes ExecDir, MetaSrcDir and PgmSrcDir has been changed to 254
   in datamodel.
2000.02.21  HH
   ActivateOI_FromFile with zIGNORE_ATTRIB_ERRORS(8192)
2000.01.13  BL
   remove unreferenced local variable from here old version
1998/09/10  DC
   Added AcceptParameter operation to force the Return Value flag for string parms. (TB 249)
04.11.1998  HH
   set AcceptParameter to Dummy (TB370).
*/

TRANSFORMATION OPERATION
GlobalOperGrpMigrate( VIEW        NewOperGrp BASED ON LOD TZOGSRCO,
                      STRING (32) OperGroupMetaName,
                      VIEW        SourceLPLR BASED ON LOD TZCMLPLO,
                      VIEW        vSubtask )

   VIEW OldOperGrp  BASED ON LOD TZOGSRCO
   VIEW CurrentLPLR BASED ON LOD TZCMLPLO

   STRING ( 513 ) SourceFileName                    // size according to zMAX_FILESPEC+1
   STRING ( 513 ) SourceFileName2                   // size according to zMAX_FILESPEC+1
   STRING ( 36 ) SourceName

   // Activate existing source meta OldOperGroup
   SourceFileName = SourceLPLR.LPLR.MetaSrcDir + "\" + OperGroupMetaName + ".POG"
   // zIGNORE_ATTRIB_ERRORS=8192
   ActivateOI_FromFile( OldOperGrp, "TZOGSRCO", SourceLPLR,
                        SourceFileName, zSINGLE + 8192 )
   NAME VIEW OldOperGrp "OldOperGrp"
   //ActivateEmptyMetaOI( vSubtask, NewOperGrp, 14, zSINGLE ) // 14 is zSOURCE_GOPGRP_META
   //NAME VIEW NewOperGrp "NewOperGrp"

   IF NewOperGrp.GlobalOperationGroup DOES NOT EXIST

      // The Global Operation Group does not exist in the target, so simply copy everything over.

      CreateMetaEntity( vSubtask, NewOperGrp, "GlobalOperationGroup", zPOS_AFTER )
      SetMatchingAttributesByName( NewOperGrp, "GlobalOperationGroup", OldOperGrp, "GlobalOperationGroup", zSET_NULL )

      // Copy over the source file to the new LPLR directory, if there is a source file.
      // We will assume a source file exists if the SourceFile.Extension is not null.  If there
      // is actually no source file, the CopyFile does no harm.
      IF OldOperGrp.GlobalOperationGroup.Extension != ""
         RetrieveViewForMetaList( vSubtask, CurrentLPLR, zSOURCE_ERD_META ) // Get view for directory info.
         ResetViewFromSubobject( CurrentLPLR )
         IF OldOperGrp.GlobalOperationGroup.Extension = "C"
            SourceName = OperGroupMetaName + ".C"
         ELSE
            SourceName = OperGroupMetaName + ".VML"
         END
         SourceFileName = SourceLPLR.LPLR.PgmSrcDir + "\" + SourceName
         SourceFileName2 = CurrentLPLR.LPLR.PgmSrcDir + "\" + SourceName
         SysCopyFile( vSubtask, SourceFileName, SourceFileName2, TRUE )
         DropMetaOI( vSubtask, CurrentLPLR )
      END

      FOR EACH OldOperGrp.Operation

         CreateMetaEntity( vSubtask, NewOperGrp, "Operation", zPOS_AFTER )
         SetMatchingAttributesByName ( NewOperGrp, "Operation", OldOperGrp,
                                       "Operation", zSET_NULL )

         FOR EACH OldOperGrp.Parameter
            // Make sure the ShortDesc in the Parameter is not null.
            IF OldOperGrp.Parameter.ShortDesc = ""
               OldOperGrp.Parameter.ShortDesc = "Parm"
            END
            CreateMetaEntity( vSubtask, NewOperGrp, "Parameter", zPOS_AFTER )
            SetMatchingAttributesByName( NewOperGrp, "Parameter", OldOperGrp,
                                         "Parameter", zSET_NULL )
         END

      END

   ELSE

      // The Global Operation Group exists in the target, so merge in any new Operations.
      // We will force over any Operations (both prototype and code) for any Operations not flagged as modified in target LPLR.

      FOR EACH OldOperGrp.Operation

         SET CURSOR FIRST NewOperGrp.Operation WHERE NewOperGrp.Operation.Name = OldOperGrp.Operation.Name
         IF RESULT < zCURSOR_SET
            CreateMetaEntity( vSubtask, NewOperGrp, "Operation", zPOS_AFTER )
            SetMatchingAttributesByName ( NewOperGrp, "Operation", OldOperGrp, "Operation", zSET_NULL )
         END

         // If the operation is new or modifiable, set new parameters and operation code.
         IF NewOperGrp.Operation.DoNotMergeFlag = ""
            FOR EACH NewOperGrp.Parameter
               DELETE ENTITY NewOperGrp.Parameter NONE
            END
            FOR EACH OldOperGrp.Parameter
               // Make sure the ShortDesc in the Parameter is not null.
               IF OldOperGrp.Parameter.ShortDesc = ""
                  OldOperGrp.Parameter.ShortDesc = "Parm"
               END
               CreateMetaEntity( vSubtask, NewOperGrp, "Parameter", zPOS_AFTER )
               SetMatchingAttributesByName( NewOperGrp, "Parameter", OldOperGrp, "Parameter", zSET_NULL )
            END

            // Add new Operation Code.
            // CopyOperationCode

         END

      END

   END



   DropObjectInstance( OldOperGrp )
   CommitMetaOI( vSubtask, NewOperGrp, 14 )   // 14 is zSOURCE_GOPGRP_META

   // Build the prototypes in zeidon.h file.
   RetrieveViewForMetaList( vSubtask, CurrentLPLR, zSOURCE_GOPGRP_META ) // Get view for Merge oper.
   ResetViewFromSubobject( CurrentLPLR )
   MergeGlobalPrototypes( NewOperGrp,
                          NewOperGrp.GlobalOperationGroup.Name,
                          "GlobalOperationGroup",
                          CurrentLPLR )
   DropMetaOI( vSubtask, CurrentLPLR )

END

ENTITY CONSTRAINT OPERATION
AcceptParameter( VIEW OperGrp BASED ON LOD TZOGSRCO,
                 STRING ( 32 ) sEntityName,
                 SHORT Event,
                 SHORT State )

CASE Event
OF   zECE_ACCEPT:

   // For a string parameter, force on the Return Value flag.
   /*  removed HH 4.11.98
   IF  OperGrp.Parameter.DataType = "S" AND
        OperGrp.Parameter.PFlag != "Y"
              OperGrp.Parameter.PFlag = "Y"
              MessageSend( OperGrp, "OP00812", "Operations",
                           "Forcing the setting of 'Return Value' for string parameters.",
                           zMSGQ_OBJECT_CONSTRAINT_WARNING, 0 )
   END
   */
   RETURN 0

     /* end zECE_ACCEPT */
OF   zECE_CANCEL:

     /* end zECE_CANCEL */
OF   zECE_CREATE:

     /* end zECE_CREATE */
OF   zECE_DELETE:

     /* end zECE_DELETE */
OF   zECE_EXCLUDE:

     /* end zECE_EXCLUDE */
OF   zECE_INCLUDE:

     /* end zECE_INCLUDE */
END  /* case */

END
