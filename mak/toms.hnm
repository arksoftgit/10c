!if "$(DRIVER_APP)" == "YES"
BASELINKDLLS = $(BASELINKDLLS) zdrapp.lib zdctl.lib

!if EXIST( $(Z_LIB)r\TZCTL.LIB )
BASELINKDLLS = $(BASELINKDLLS) tzctl.lib
!endif

OBJS_ALL = $(OBJS_ALL) zdllinst.obj
!endif

!if EXIST( $(Z_BASE_ENV)\$(MODULE).rc )
RESFILE = $(Z_OBJ)\$(MODULE).res
!endif

# =============================================================
# Dependencies
# =============================================================
ALL: $(TARGETS)

# =============================================================
# Compile all the OBJs
# =============================================================
!if "$(OBJS)" != ""
OBJS_ALL = $(OBJS_ALL) $(OBJS)

$(OBJS): $(Z_SRC)\$(@B).c $(C_DEPENDENTS) $(Z_INC)z\tzlodopr.h
   qspawn $(Z_SRC)\$(@B).ERR cl @<<
$(CL_OPT) $(MORE_CL_OPT)
$(Z_SRC)\$(@B).c
-Fo$(Z_OBJ)\$(@B).obj
<<
!if "$(BUILDOS)" == "win"
   copy $(@B).obj $(Z_OBJ)\$(@B).obj
   del $(@B).obj
!endif

!endif

# =============================================================
# Compile all the OBJs
# =============================================================
!if "$(CPP_OBJS)" != ""
OBJS_ALL = $(OBJS_ALL) $(CPP_OBJS)

!if "$(BUILDOS)"=="win32"
TP = -TP
LINKDLLS = $(LINKDLLS) MFCS42.LIB
!else
TP = -Tp
!endif

$(CPP_OBJS): $(Z_SRC)\$(@B).c $(C_DEPENDENTS)
   cl $(CL_OPT) $(MORE_CL_OPT) $(TP) $(Z_SRC)\$(MODULE).c -Fo$(Z_OBJ)\$(MODULE).obj

!if "$(BUILDOS)" == "win"
   copy $(@B).obj $(Z_OBJ)\$(@B).obj
   del $(@B).obj
!endif

!endif

# =============================================================
# Create .LIB files for dependent libs.
# =============================================================
!if "$(BUILDOS)"=="win32"
!if "$(LIB_DEPENDENTS)" != ""
$(LIB_DEPENDENTS): $(Z_BASE_ENV)\$(@B).dfb
   qpreproc __WIN32__=1 __WIN32I__=1 $(Z_BASE_ENV)\$(@B).dfb > $(Z_BASE_ENV)\$(@B).def
   lib /DEF:$(Z_BASE_ENV)\$(@B).def /LIBPATH:$(Z_LIB)z /OUT:$(Z_LIB)z\$(@B).lib /MACHINE:IX86
!endif
!endif

# =============================================================
# Create .RES file  (only if RC exists)
# =============================================================
!if EXIST( $(Z_BASE_ENV)\$(MODULE).rc )
$(Z_OBJ)\$(MODULE).res:  $(Z_BASE_ENV)\$(MODULE).rc
!if "$(BUILDOS)"=="win32"
   rc -d__WIN32__ /fo$(RESFILE) $(Z_BASE_ENV)\$(MODULE).rc
!else
   rc -r $(Z_BASE_ENV)\$(MODULE).rc $(RESFILE)
   del $(RESFILE)
   move $(@B).res $(RESFILE)
!endif
!endif

# =============================================================
# Link the .DLL
# =============================================================
$(TARGETS) : $(OBJS) $(CPP_OBJS) $(RESFILE) $(LIB_DEPENDENTS)
!if "$(BUILDOS)" == "win32"
#-------------------- Win32 --------------------
   qpreproc __WIN32__=1 $(Z_BASE_ENV)\$(@B).dfb > $(Z_BASE_ENV)\$(@B).def
   qspawn $(Z_SRC)\$(@B).LER link @<<
$(LINKDLLS) $(BASELINKDLLS) $(LINK_OPT)
/OUT:$(Z_BIN)\$(@B).dll /DEF:$(Z_BASE_ENV)\$(@B).def /IMPLIB:$(Z_LIB)z\$(@B).lib $(RESFILE) $(OBJS_ALL)
<<
   dumpbin /exports $(Z_BIN)\$(@B).DLL > $(Z_BASE_ENV)\$(@B).DXX
   mergedef $(Z_BASE_ENV)\$(@B).def $(Z_BASE_ENV)\$(@B).DXX
   qspawn +$(Z_SRC)\$(@B).LER link @<<
$(LINKDLLS) $(BASELINKDLLS) $(LINK_OPT)
/OUT:$(Z_BIN)\$(@B).dll /MAP:$(@B).MAP /DEF:$(Z_BASE_ENV)\$(@B).TMP /IMPLIB:$(Z_LIB)$(Z_LIB_SUFFIX)\$(@B).lib $(RESFILE) $(OBJS_ALL)
<<
#  del $(Z_BASE_ENV)\$(@B).DXX
#  del $(Z_BASE_ENV)\$(@B).TMP
!else
#-------------------- Win 3.x --------------------
   qpreproc $(Z_BASE_ENV)\$(@B).dfb > $(Z_BASE_ENV)\$(@B).def
   qspawn $(Z_SRC)\$(@B).LER link @<<
$(LINK_OPT) +
$(OBJS_ALL: = +
)
$(Z_BIN)\$(MODULE).DLL
$(Z_BASE_ENV)\$(MODULE).map
$(LINKDLLS) $(BASELINKDLLS)
$(Z_BASE_ENV)\$(MODULE).def
<<
   qpreproc $(Z_BASE_ENV)\$(@B).dfb > $(Z_BASE_ENV)\$(@B).DXX
   qmap2def $(Z_BASE_ENV)\$(MODULE).DXX $(Z_BASE_ENV)\$(MODULE).map > $(Z_BASE_ENV)\$(MODULE).def
   del $(Z_BASE_ENV)\$(@B).DXX
   qspawn +$(Z_SRC)\$(@B).LER link @<<
$(LINK_OPT) +
$(OBJS_ALL:  = +^
)
$(Z_BIN)\$(MODULE).DLL
NUL
$(LINKDLLS) $(BASELINKDLLS)
$(Z_BASE_ENV)\$(MODULE).def
<<
   implib $(Z_LIB)z\$(MODULE).lib $(Z_BASE_ENV)\$(MODULE).def
!ifdef RESFILE
   rc  $(Z_OBJ)\$(MODULE).res $(Z_BIN)\$(MODULE).dll
!endif

!endif


CLEAN:
   qdelete @<<
$(OBJS_ALL: =
)
$(OBJS_ALL:OBJ=ERR)
$(Z_OBJ)\$(MODULE).res
$(Z_BIN)\$(MODULE).dll
$(Z_BIN)\$(MODULE).ilk
$(Z_BIN)\$(MODULE).pdb
$(Z_BIN)\$(MODULE).idb
$(Z_LIB)z\$(MODULE).lib
$(Z_LIB)z\$(MODULE).exp
$(Z_SRC)\$(MODULE).ler
<<
